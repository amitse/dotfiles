{{- define "secret" -}}
{{- $url := . -}}
{{- if hasPrefix $url "op://" -}}
  {{- if lookPath "op" -}}
    {{- output "op" "read" $url | trim -}}
  {{- else -}}
    {{- fail "1Password CLI (op) not found. Install with: brew install 1password-cli" -}}
  {{- end -}}
{{- else if hasPrefix $url "bw://" -}}
  {{- if lookPath "bw" -}}
    {{- $parts := split "/" $url -}}
    {{- $itemId := index $parts 2 -}}
    {{- $field := index $parts 3 | default "password" -}}
    {{- if env "BW_SESSION" -}}
      {{- output "bw" "get" "password" $itemId "--session" (env "BW_SESSION") | trim -}}
    {{- else -}}
      {{- fail "Bitwarden session not found. Run: export BW_SESSION=\"$(bw unlock --raw)\"" -}}
    {{- end -}}
  {{- else -}}
    {{- fail "Bitwarden CLI (bw) not found. Install with: npm install -g @bitwarden/cli" -}}
  {{- end -}}
{{- else if hasPrefix $url "env://" -}}
  {{- $varName := slice $url 6 -}}
  {{- $value := env $varName -}}
  {{- if $value -}}
    {{- $value -}}
  {{- else -}}
    {{- fail (printf "Environment variable %s not found" $varName) -}}
  {{- end -}}
{{- else if hasPrefix $url "file://" -}}
  {{- $filePath := slice $url 7 -}}
  {{- if hasPrefix $filePath "~/" -}}
    {{- $filePath = printf "%s/%s" .chezmoi.homeDir (slice $filePath 2) -}}
  {{- end -}}
  {{- if stat $filePath -}}
    {{- include $filePath | trim -}}
  {{- else -}}
    {{- fail (printf "Secret file not found: %s" $filePath) -}}
  {{- end -}}
{{- else -}}
  {{- fail (printf "Unsupported secret URL format: %s. Supported: op://, bw://, env://, file://" $url) -}}
{{- end -}}
{{- end -}}