# Developer Profile Configuration
# Enhanced development workflow with modern CLI tools

{{- if eq .profile "developer" }}

# Enhanced environment for developers
export EDITOR="${EDITOR:-{{ .editor.default }}}"
export VISUAL="${VISUAL:-$EDITOR}"
export PAGER="${PAGER:-bat}"

# Development-focused aliases
alias e='${EDITOR}'
alias reload='exec ${SHELL} -l'

# Enhanced file operations with modern tools
{{- if lookPath "exa" }}
alias ls='exa --icons'
alias ll='exa -l --icons --git'
alias la='exa -la --icons --git'
alias tree='exa --tree --icons'
alias lt='exa --tree --level=2 --icons'
{{- else }}
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
{{- end }}

{{- if lookPath "bat" }}
alias cat='bat'
alias less='bat'
alias catp='bat --style=plain'
{{- end }}

{{- if lookPath "rg" }}
alias grep='rg'
alias rgi='rg -i'
alias rgc='rg -C 3'
{{- end }}

{{- if lookPath "fd" }}
alias find='fd'
alias findf='fd --type f'
alias findd='fd --type d'
{{- end }}

# Git workflow for developers
{{- if lookPath "git" }}
alias g='git'
alias ga='git add'
alias gaa='git add --all'
alias gc='git commit'
alias gcm='git commit -m'
alias gca='git commit --amend'
alias gco='git checkout'
alias gcb='git checkout -b'
alias gd='git diff'
alias gdc='git diff --cached'
alias gl='git log --oneline --graph --decorate'
alias gla='git log --oneline --graph --decorate --all'
alias gp='git push'
alias gpl='git pull'
alias gs='git status'
alias gss='git status -s'
alias gb='git branch'
alias gba='git branch -a'
alias gm='git merge'
alias gr='git remote -v'
alias gst='git stash'
alias gsp='git stash pop'

# Developer git functions
gac() {
    git add -A && git commit -m "$1"
}

glog() {
    git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit "$@"
}

# Branch cleanup for developers
gclean() {
    git branch --merged | grep -v "\*\|main\|master\|develop" | xargs -n 1 git branch -d
}

# Quick commit with branch info
gcb() {
    local branch=$(git branch --show-current)
    git commit -m "$branch: $1"
}
{{- end }}

# GitHub CLI integration for developers
{{- if lookPath "gh" }}
alias prs='gh pr list'
alias pr='gh pr view'
alias prc='gh pr create'
alias prco='gh pr checkout'
alias issues='gh issue list'
alias issue='gh issue view'
alias repos='gh repo list'
{{- end }}

# Development server shortcuts
{{- if lookPath "npm" }}
alias ni='npm install'
alias ns='npm start'
alias nt='npm test'
alias nb='npm run build'
alias nrd='npm run dev'
alias nw='npm run watch'
{{- end }}

{{- if lookPath "yarn" }}
alias y='yarn'
alias ya='yarn add'
alias ys='yarn start'
alias yt='yarn test'
alias yb='yarn build'
alias yd='yarn dev'
{{- end }}

{{- if lookPath "python" }}
alias py='python'
alias pip='python -m pip'
alias venv='python -m venv'
alias activate='source venv/bin/activate'
{{- else if lookPath "python3" }}
alias py='python3'
alias pip='python3 -m pip'
alias venv='python3 -m venv'
alias activate='source venv/bin/activate'
{{- end }}

# Docker workflow (if available)
{{- if lookPath "docker" }}
alias d='docker'
alias dc='docker-compose'
alias dps='docker ps'
alias di='docker images'
alias drm='docker rm'
alias drmi='docker rmi'
alias dex='docker exec -it'
alias dlogs='docker logs'
alias dclean='docker system prune -f'
{{- end }}

# Development utilities
{{- if lookPath "jq" }}
alias json='jq .'
{{- end }}

{{- if lookPath "curl" }}
# HTTP testing shortcuts
alias get='curl -X GET'
alias post='curl -X POST'
alias put='curl -X PUT'
alias delete='curl -X DELETE'
{{- end }}

# File watching for development
{{- if lookPath "entr" }}
# Watch and run tests
alias watchtest='find . -name "*.py" -o -name "*.js" -o -name "*.ts" | entr -c'
# Watch and run build
alias watchbuild='find . -name "*.js" -o -name "*.ts" -o -name "*.scss" | entr -c npm run build'
{{- end }}

# Enhanced tmux for development
{{- if lookPath "tmux" }}
alias t='tmux'
alias ta='tmux attach'
alias tl='tmux list-sessions'
alias tn='tmux new-session -s'
alias tk='tmux kill-session -t'

# Development session shortcuts
dev() {
    local session_name="${1:-dev}"
    tmux has-session -t "$session_name" 2>/dev/null || tmux new-session -d -s "$session_name"
    tmux attach-session -t "$session_name"
}
{{- end }}

# Project navigation
{{- if lookPath "fzf" }}
# Quick project switcher (if using a standard projects directory)
proj() {
    local projects_dir="{{ .paths.workspace }}"
    if [ -d "$projects_dir" ]; then
        local project=$(find "$projects_dir" -maxdepth 2 -type d | fzf)
        [ -n "$project" ] && cd "$project"
    else
        echo "Projects directory not found: $projects_dir"
    fi
}
{{- end }}

# Code quality shortcuts
{{- if lookPath "eslint" }}
alias lint='eslint .'
alias lintfix='eslint . --fix'
{{- end }}

{{- if lookPath "prettier" }}
alias fmt='prettier --write .'
{{- end }}

{{- if lookPath "black" }}
alias pyfmt='black .'
{{- end }}

# Developer productivity functions
mkproj() {
    local name="$1"
    if [ -z "$name" ]; then
        echo "Usage: mkproj <project-name>"
        return 1
    fi
    
    mkdir -p "{{ .paths.workspace }}/$name"
    cd "{{ .paths.workspace }}/$name"
    
    # Initialize git
    {{- if lookPath "git" }}
    git init
    echo "# $name" > README.md
    echo "node_modules/" > .gitignore
    echo ".env" >> .gitignore
    echo ".DS_Store" >> .gitignore
    {{- end }}
    
    echo "üìÅ Created project: $name"
}

# Port management for developers
ports() {
    echo "üîå Common development ports:"
    echo "  3000  - React dev server"
    echo "  3001  - Next.js"
    echo "  4000  - Express/Node.js"
    echo "  5000  - Flask/Python"
    echo "  8000  - Django/Python"
    echo "  8080  - Alternative HTTP"
    echo "  9000  - Various dev servers"
    echo ""
    {{- if not (eq .chezmoi.os "windows") }}
    echo "üîç Currently listening:"
    netstat -tlnp 2>/dev/null | grep LISTEN | awk '{print $4}' | sort -u
    {{- end }}
}

# Developer help
dev_help() {
    echo "üöÄ Developer Profile Active"
    echo "Enhanced commands available:"
    echo ""
    echo "üìÅ File Operations:"
    {{- if lookPath "exa" }}
    echo "  ‚Ä¢ ls/ll/la    - Enhanced directory listing with git status"
    {{- end }}
    {{- if lookPath "bat" }}
    echo "  ‚Ä¢ cat/less    - Syntax-highlighted file viewing"
    {{- end }}
    {{- if lookPath "rg" }}
    echo "  ‚Ä¢ grep/rg     - Ultra-fast text search"
    {{- end }}
    echo ""
    echo "üîß Git Workflow:"
    echo "  ‚Ä¢ g <cmd>     - Git shortcuts (ga, gc, gco, etc.)"
    echo "  ‚Ä¢ glog        - Beautiful git log"
    echo "  ‚Ä¢ gclean      - Cleanup merged branches"
    {{- if lookPath "gh" }}
    echo "  ‚Ä¢ prs/pr      - GitHub CLI shortcuts"
    {{- end }}
    echo ""
    echo "üíª Development:"
    echo "  ‚Ä¢ mkproj <name> - Create new project"
    {{- if lookPath "fzf" }}
    echo "  ‚Ä¢ proj        - Quick project switcher"
    {{- end }}
    echo "  ‚Ä¢ dev <name>  - Start development tmux session"
    echo "  ‚Ä¢ ports       - Show common development ports"
    echo ""
    echo "üîç Fuzzy Finding:"
    echo "  ‚Ä¢ Ctrl+R      - Fuzzy history search"
    echo "  ‚Ä¢ Ctrl+T      - Fuzzy file finder"
    echo ""
    echo "üí° Run 'dev_help' anytime to see this message"
}

{{- end }}